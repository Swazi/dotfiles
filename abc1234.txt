import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class SoccerLeague {

	private class Team {
		String name;
		int wins;
		int losses;

		public Team(String name, int wins, int losses) {
			this.name = name;
			this.wins = wins;
			this.losses = losses;
		}

	}

	private ArrayList<Team> teams;

	public SoccerLeague() {
		this.teams = new ArrayList<Team>();
	}

	private void updateRecords(String team1, String team2, int score1, int score2) {
		this.addTeam(team1);
		this.addTeam(team2);

		for (Team t : teams) {
			if (t.name.equals(team1)) {
				if (score1 > score2) {
					t.wins++;
				} else {
					t.losses++;
				}
			} else if (t.name.equals(team2)) {
				if (score1 > score2) {
					t.losses++;
				} else {
					t.wins++;
				}
			}
		}
	}

	private void addTeam(String team) {
		for (Team t : this.teams) {
			if (t.name.equals(team)) {
				return;
			}
		}
		
		for (int i = 0; i < this.teams.size(); i++) {
			if (this.teams.get(i).name.compareTo(team) > 0) {
				this.teams.add(i, new Team(team, 0, 0));
				return;
			}
		}
		
		this.teams.add(new Team(team, 0, 0));
	}
	
	private void displayRecords() {
		for (Team t : this.teams) {
			System.out.println(t.name + "   Wins: " + t.wins + "   Losses:" + t.losses );
		}
	}

	public static void main(String[] args) throws IOException {
		SoccerLeague league = new SoccerLeague();
		BufferedReader br = new BufferedReader(new FileReader("src/soccer.txt"));
		try {
			String line = br.readLine();

			while (line != null) {
				String[] scores = line.split("\\s+");
				String team1 = scores[0];
				String team2 = scores[2];
				int score1 = Integer.valueOf(scores[1]);
				int score2 = Integer.valueOf(scores[3]);
				league.updateRecords(team1, team2, score1, score2);
				line = br.readLine();
			}
			
			league.displayRecords();
		} finally {
			br.close();
		}
	}
}

import java.util.*;

public class StringPermuter
{
  public String[] permute(String input)
  {
    ArrayList<String> result = new ArrayList<String>();
    
    permute(input, "", result);
    
    String[] resultArray = new String[result.size()];
    return (String []) result.toArray(resultArray);
  }
  
  public static void permute(String input, String output, ArrayList<String> result) 
  {
    if (input.length()==1)
    {
      result.add(output+input);
    }
    else
    {
      for (int i=0; i<input.length(); i++)
      {
        String newInput=removeChar(input,i);
        String newOutput=output+input.charAt(i);
        
        permute(newInput,newOutput,result);
      }
    }
  }
  
  public static String removeChar(String s, int i) 
  {
    String result= s.substring(0,i) + s.substring(i+1);
    return result;
  }
  
  public static void main(String[] args)
  {
    StringPermuter sp = new StringPermuter();
    String[] result = sp.permute("elloh");
    
    for (int i=0; i<result.length; i++)
    {
      System.out.println(result[i]);
    } 
  }
}

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class UnJumbler {

	public static void main(String[] args) throws IOException {
		StringPermuter sp = new StringPermuter();
		
		Scanner input = new Scanner(System.in);
		System.out.println("Enter the string to unjumble: ");
		String jumbled = input.nextLine();
		
		BufferedReader br = new BufferedReader(new FileReader("src/6of12.txt"));
		try {
			String word = br.readLine();

			while (word != null) {
				String[] result = sp.permute(jumbled);
				boolean matched = false;
				
				for (String s : result) {
					if (word.equals(s)) {
						matched = true;
					}
				}
				if (matched) {
					System.out.println(word);
				}
				word = br.readLine();
			}
		} finally {
			br.close();
			input.close();
		}

	}
}

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Warmup {

	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new FileReader("input.txt"));
		try {
			String line = br.readLine();

			while (line != null) {
				System.out.println(line);
				line = br.readLine();
			}
		} finally {
			br.close();
		}
	}
}

import java.util.Scanner;

public class WordRotation {

	
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		System.out.println("Please enter string to rotate:");
		String sentence = input.nextLine();
		System.out.println("Please enter number of times to rotate");
		Integer i = input.nextInt();
		System.out.println(rotate(sentence, i));
		input.close();
	}
	
	
	private static String rotate(String s, int i) {
		String[] words = s.split(" ");
		
		for (int x = 0; x < i; x++) {
			for (int j = words.length - 1; j > 0; j--) {
				String temp = words[j];
				words[j] = words[j - 1];
				words[j - 1] = temp;
			}
		}
		
		return combine(words);	
		
	}
	

	
	private static String combine(String[] words) {
		String s = "";
		
		for (String word : words) {
			s = s + word + " ";
		}
		
		return s;
	}
}

import java.util.*;

public class StringPermuter
{
  public String[] permute(String input)
  {
    ArrayList<String> result = new ArrayList<String>();
    
    permute(input, "", result);
    
    String[] resultArray = new String[result.size()];
    return (String []) result.toArray(resultArray);
  }
  
  public static void permute(String input, String output, ArrayList<String> result) 
  {
    if (input.length()==1)
    {
      result.add(output+input);
    }
    else
    {
      for (int i=0; i<input.length(); i++)
      {
        String newInput=removeChar(input,i);
        String newOutput=output+input.charAt(i);
        
        permute(newInput,newOutput,result);
      }
    }
  }
  
  public static String removeChar(String s, int i) 
  {
    String result= s.substring(0,i) + s.substring(i+1);
    return result;
  }
  
  public static void main(String[] args)
  {
    StringPermuter sp = new StringPermuter();
    String[] result = sp.permute("elloh");
    
    for (int i=0; i<result.length; i++)
    {
      System.out.println(result[i]);
    } 
  }
}

