import java.util.concurrent.ThreadLocalRandom;


public class CoinFlip {
	
	private static int HEADS = 1;

	public static void main(String[] args) {
		int[] streakCounts = new int[100000];
		int max = 0;
		int headStreak = 0;
		
		for (int i = 0; i < 100000; i++) {
			if (flipCoin() == HEADS) {
				headStreak++;
			} else {
				if (headStreak > max) {
					max = headStreak;
				}		
				streakCounts[headStreak]++;
				headStreak = 0;
			}
		}
		
		System.out.println("Streak      Count");
		
		for (int i = 1; i <= max; i++) {
			System.out.println(i + "           " + streakCounts[i]);
		}
		
	}
	
	
	private static int flipCoin() {
		return ThreadLocalRandom.current().nextInt(2);
	}
}

import java.util.Scanner;

public class Hanoi {
	
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		while (true) {
			System.out.print("Enter the number of disks: ");
			int disks = input.nextInt();
			System.out.println("Moves for " + disks + " disks:");
			hanoi4(disks, 1, 2, 3, 4);
			
			System.out.print("Enter 1 to go again: ");
			if (input.nextInt() != 1) {
				break;
			}
		}
	}

	public static void hanoi4(int disks, int p1, int p2, int p3, int p4) {
		if (disks == 1)
			System.out.println(p1 + "--> " + p4);
		else if (disks == 2) {
			System.out.println(p1 + "--> " + p2);
			System.out.println(p1 + "--> " + p4);
			System.out.println(p2 + "--> " + p4);
		} else {
			hanoi4(disks - 2, p1, p3, p4, p2);
			System.out.println(p1 + "--> " + p3);
			System.out.println(p1 + "--> " + p4);
			System.out.println(p3 + "--> " + p4);
			hanoi4(disks - 2, p2, p1, p3, p4);
		}
	}
}

import java.util.Scanner;


public class Planets {

	static String[] planets = {"mercury", "venus", "earth", "mars", "jupiter", "saturn", "uranus", "neptune", "pluto"};
	static double[] gravity = {.39, .91, 1.00, .38, 2.87, 1.32, .093, 1.23, .03};
	
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		
		while(true) {
			showMenu();
			int option = input.nextInt();
			if (option == 1) {
				System.out.print("Enter your weight: ");
				int weight = input.nextInt();
				System.out.print("Enter the planet: ");
				String planet = input.next();
				System.out.println("You weigh " + weightOnPlanet(weight, planet) + " on planet");
			} else if (option == 2) {
				System.out.print("Enter your weight: ");
				int weight = input.nextInt();
				weightOnAllPlanets(weight);
			} else if (option == 3) { 
				displayPlanets();
			}
			
			if (option > 4) {
				System.out.println("Bye!");
				break;
			}
		}
	}
	
	private static double weightOnPlanet(int weight, String planet) {
		for (int i = 0; i < planets.length; i++) {
			if (planet.toLowerCase().equals(planets[i])) {
				return weight * gravity[i];
			}
		}
		return -1;
	}
	
	private static void weightOnAllPlanets(int weight) {
		for (String planet : planets) {
			System.out.println(weight + " lbs weights " + weightOnPlanet(weight, planet) + " on planet.");
		}
	}
	
	private static void displayPlanets() {
		for (int i = 0; i < planets.length; i++) {
			System.out.println(i + "       " + planets[i] + "       " + gravity[i]);
		}
	}
	
	private static void showMenu() {
		System.out.println();
		System.out.println("Welcome to the Planet Calculator!");
		System.out.println("Enter 1 to find your weight on a given planet.");
		System.out.println("Enter 2 to see your weight on all planets.");
		System.out.println("Enter 3 to display  all planets and gravity factors,");
		System.out.println("Enter 4 to show this menu at any time.");
		System.out.println("Enter any other number to exit");
	}
}

import java.util.Random;
import java.util.Scanner;
import java.util.concurrent.ThreadLocalRandom;

public class Randomize {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		System.out.print("To display a list of random numbers between 0 and N enter an N: ");
		int size = input.nextInt();
		int[] numbers = randomizedArray(size);
		
		for (int i = 0; i < numbers.length; i++) {
			System.out.print(numbers[i] + " ");
		}
		
	}
	
	private static int[] randomizedArray(int size) {
		int[] numbers = new int[size];
		
		for (int i = 1; i <= numbers.length; i++) {
			numbers[i-1] = i;
		}
		
		shuffleArray(numbers);
		return numbers;
	}
	
	static void shuffleArray(int[] array) {
		Random random = ThreadLocalRandom.current();
		for (int i = array.length - 1; i > 0; i--) {
			int index = random.nextInt(i + 1);
			// Simple swap
			int a = array[index];
			array[index] = array[i];
			array[i] = a;
		}
	}
}

import java.util.concurrent.ThreadLocalRandom;

public class Warmup {

	public static void main(String[] args) {
		int[] array = new int[100];
		for (int i = 0; i < array.length; i++) {
			array[i] = ThreadLocalRandom.current().nextInt(100);
			System.out.println("array[" + i + "] = " + array[i]);
		}
	}
}




